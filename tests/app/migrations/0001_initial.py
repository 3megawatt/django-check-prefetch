# Generated by Django 2.2.12 on 2020-05-18 05:45

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={"abstract": False, "base_manager_name": "check_prefetch_manager",},
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("check_prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Books",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "author",
                    models.ManyToManyField(related_name="books", to="app.Author"),
                ),
            ],
            options={"abstract": False, "base_manager_name": "check_prefetch_manager",},
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("check_prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={"abstract": False, "base_manager_name": "check_prefetch_manager",},
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("check_prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Reporter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                ("email", models.EmailField(max_length=254)),
            ],
            options={"abstract": False, "base_manager_name": "check_prefetch_manager",},
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("check_prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="DjangoModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "book",
                    models.ManyToManyField(related_name="django_model", to="app.Books"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="books",
            name="publisher",
            field=models.ManyToManyField(
                related_name="books_publisher", to="app.Publisher"
            ),
        ),
        migrations.AddField(
            model_name="books",
            name="reporter",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.Reporter",
            ),
        ),
    ]
